volumes:
  kafka_data:
  kafka-ui-data:

services:

  api-service:
    image: api-service
    ports:
      - "8080:8080"
    depends_on:
      - llm-service
      - history-service
      - kafka-service
    environment:
      - LLM_ENDPOINT=llm-service:8081
      - HISTORY_ENDPOINT=history-service:8083
      - KAFKA_ENDPOINT=broker:29092
#
  llm-service:
    image: llm-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - ollama
    environment:

      - OLLAMA_ENDPOINT=ollama:11434

  history-service:
    image: history-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    environment:
      - POSTGRES_ENDPOINT=postgresql://user:pass@postgres:5432/postgres

  kafka-service:
    image: kafka-service
    depends_on:
      - broker
      - postgres
    environment:
      - POSTGRES_ENDPOINT=postgresql://user:pass@postgres:5432/postgres
      - KAFKA_ENDPOINT=broker:29092

  ollama:
    image: ollama/ollama:0.5.12
    ports:
      - 11434:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    entrypoint: [ "/usr/bin/bash", "/entrypoint.sh" ]

  ollama-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-webui
    volumes:
      - ./ollama/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 8090:8080
    environment: # https://docs.openwebui.com/getting-started/env-configuration#default_models
      - OLLAMA_BASE_URLS=http://ollama:11434
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_NAME=valiantlynx AI
      - WEBUI_URL=http://localhost:8090
      - WEBUI_SECRET_KEY=t0p-s3cr3t
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=user
      - POSTGRES_DB=postgres

  broker:
    image: confluentinc/confluent-local:7.4.4
    hostname: broker
    container_name: broker
    ports:
      - "8082:8082"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      - broker
    ports:
      - 9999:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - broker
    command: "kafka-topics --create --topic history --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server broker:29092"